rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // === USERS COLLECTION ===
    match /users/{userId} {
      // Allow read access for:
      // 1. The user themselves (request.auth.uid == userId)
      // 2. CEOs (Role == 'CEO')
      // 3. Users in the same company (company_id match)
      allow read: if request.auth != null && (
        request.auth.uid == userId ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.Role == 'CEO' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.company_id == resource.data.company_id
      );
      
      // Allow users to create their own profile
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Allow users to update their own profile or CEOs to update any profile
      allow update: if request.auth != null && (
        request.auth.uid == userId || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.Role == 'CEO'
      );
      
      // Allow only CEOs to delete user documents
      allow delete: if request.auth != null && 
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.Role == 'CEO';
    }
    
    // === AUDIT LOGS COLLECTION ===
    match /audit_logs/{logId} {
      // Allow CEOs to read audit logs
      allow read: if request.auth != null && 
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.Role == 'CEO';
      
      // Only system (Cloud Functions) can write audit logs
      allow write: if false;
    }
    
    // === EXAMPLE RELATED COLLECTIONS ===
    // Orders collection
    match /user_orders/{orderId} {
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.Role == 'CEO'
      );
      
      allow write: if request.auth != null && resource.data.userId == request.auth.uid;
      
      allow delete: if request.auth != null && (
        resource.data.userId == request.auth.uid || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.Role == 'CEO'
      );
    }
    
    // Posts collection
    match /user_posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == resource.data.userId;
      allow update, delete: if request.auth != null && (
        request.auth.uid == resource.data.userId || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.Role == 'CEO'
      );
    }
  }
}